"""changed_sensitive

Revision ID: a5a40d843415
Revises: d117e6299dc9
Create Date: 2022-02-19 10:32:31.626236

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.orm.session import Session
from sqlalchemy.dialects import mysql
from dds_web.database import models
from dds_web import db

# revision identifiers, used by Alembic.
revision = "a5a40d843415"
down_revision = "d117e6299dc9"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # First create a nullable column (since a non-nullable would be impossible with data)
    op.add_column(
        "projects", sa.Column("non_sensitive", mysql.TINYINT(display_width=1), nullable=True)
    )

    project_table = sa.sql.table(
        "projects",
        sa.sql.column("non_sensitive", mysql.TINYINT(display_width=1)),
        sa.sql.column("is_sensitive", mysql.TINYINT(display_width=1)),
    )
    op.execute(project_table.update().values(non_sensitive=sa.not_(project_table.c.is_sensitive)))
    # Now make the column non-nullable
    op.alter_column(
        "projects", "non_sensitive", existing_type=mysql.TINYINT(display_width=1), nullable=False
    )

    op.drop_column("projects", "is_sensitive")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "projects", sa.Column("is_sensitive", mysql.TINYINT(display_width=1), nullable=True)
    )

    project_table = sa.sql.table(
        "projects",
        sa.sql.column("non_sensitive", mysql.TINYINT(display_width=1)),
        sa.sql.column("is_sensitive", mysql.TINYINT(display_width=1)),
    )
    op.execute(project_table.update().values(is_sensitive=sa.not_(project_table.c.non_sensitive)))
    # Now make the column non-nullable
    op.alter_column(
        "projects", "is_sensitive", existing_type=mysql.TINYINT(display_width=1), nullable=False
    )

    op.drop_column("projects", "non_sensitive")

    # ### end Alembic commands ###
